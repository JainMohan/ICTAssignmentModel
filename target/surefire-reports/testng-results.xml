<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="22" total="36" passed="11" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Flipkart is open]]>
    </line>
    <line>
      <![CDATA[Verifying the cart is empty]]>
    </line>
    <line>
      <![CDATA[Cart empty]]>
    </line>
  </reporter-output>
  <suite started-at="2020-09-30T09:49:23 GMT" name="Extended report" finished-at="2020-09-30T09:56:09 GMT" duration-ms="405786">
    <groups>
    </groups>
    <test started-at="2020-09-30T09:49:23 GMT" name="TestDemo" finished-at="2020-09-30T09:56:09 GMT" duration-ms="405786">
      <class name="TC_11_ScrollFlipkart">
        <test-method signature="flipAddressScroll()[pri:0, instance:TC_11_ScrollFlipkart@17f62e33]" started-at="2020-09-30T09:55:25 GMT" name="flipAddressScroll" finished-at="2020-09-30T09:55:44 GMT" duration-ms="18361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flipAddressScroll -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_11_ScrollFlipkart@17f62e33]" started-at="2020-09-30T09:55:44 GMT" name="getResult" finished-at="2020-09-30T09:55:44 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=flipAddressScroll status=SUCCESS method=TC_11_ScrollFlipkart.flipAddressScroll()[pri:0, instance:TC_11_ScrollFlipkart@17f62e33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_11_ScrollFlipkart -->
      <class name="TC_02_InvalidLog">
        <test-method signature="invalidLogin()[pri:0, instance:TC_02_InvalidLog@2eae8e6e]" started-at="2020-09-30T09:50:12 GMT" name="invalidLogin" finished-at="2020-09-30T09:50:40 GMT" duration-ms="27795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_02_InvalidLog@2eae8e6e]" started-at="2020-09-30T09:50:40 GMT" name="getResult" finished-at="2020-09-30T09:50:40 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=SUCCESS method=TC_02_InvalidLog.invalidLogin()[pri:0, instance:TC_02_InvalidLog@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_02_InvalidLog -->
      <class name="TC_10_OfferZone">
        <test-method signature="offerzonedisplay()[pri:0, instance:TC_10_OfferZone@74ea2410]" started-at="2020-09-30T09:54:54 GMT" name="offerzonedisplay" finished-at="2020-09-30T09:55:25 GMT" duration-ms="31042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- offerzonedisplay -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_10_OfferZone@74ea2410]" started-at="2020-09-30T09:55:25 GMT" name="getResult" finished-at="2020-09-30T09:55:25 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=offerzonedisplay status=SUCCESS method=TC_10_OfferZone.offerzonedisplay()[pri:0, instance:TC_10_OfferZone@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_10_OfferZone -->
      <class name="TC_09_SaveAddress">
        <test-method signature="updateaddress()[pri:0, instance:TC_09_SaveAddress@25ce9dc4]" started-at="2020-09-30T09:54:07 GMT" name="updateaddress" finished-at="2020-09-30T09:54:54 GMT" duration-ms="47772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateaddress -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_09_SaveAddress@25ce9dc4]" started-at="2020-09-30T09:54:54 GMT" name="getResult" finished-at="2020-09-30T09:54:54 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=updateaddress status=SUCCESS method=TC_09_SaveAddress.updateaddress()[pri:0, instance:TC_09_SaveAddress@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_09_SaveAddress -->
      <class name="TC_12_PincodeDisplay">
        <test-method signature="PincodeCheck()[pri:0, instance:TC_12_PincodeDisplay@76b1e9b8]" started-at="2020-09-30T09:55:44 GMT" name="PincodeCheck" finished-at="2020-09-30T09:56:09 GMT" duration-ms="25133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PincodeCheck -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_12_PincodeDisplay@76b1e9b8]" started-at="2020-09-30T09:56:09 GMT" name="getResult" finished-at="2020-09-30T09:56:09 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PincodeCheck status=SUCCESS method=TC_12_PincodeDisplay.PincodeCheck()[pri:0, instance:TC_12_PincodeDisplay@76b1e9b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_12_PincodeDisplay -->
      <class name="TC_04_AddCart">
        <test-method signature="cartcountverification()[pri:0, instance:TC_04_AddCart@470734c3]" started-at="2020-09-30T09:51:01 GMT" name="cartcountverification" finished-at="2020-09-30T09:51:18 GMT" duration-ms="17053" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Verifying the cart is empty]]>
            </line>
            <line>
              <![CDATA[Cart empty]]>
            </line>
          </reporter-output>
        </test-method> <!-- cartcountverification -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_04_AddCart@470734c3]" started-at="2020-09-30T09:51:18 GMT" name="getResult" finished-at="2020-09-30T09:51:18 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cartcountverification status=SUCCESS method=TC_04_AddCart.cartcountverification()[pri:0, instance:TC_04_AddCart@470734c3] output=Verifying the cart is empty]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="cartadditem()[pri:1, instance:TC_04_AddCart@470734c3]" started-at="2020-09-30T09:51:18 GMT" name="cartadditem" finished-at="2020-09-30T09:51:42 GMT" duration-ms="24635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cartadditem -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_04_AddCart@470734c3]" started-at="2020-09-30T09:51:42 GMT" name="getResult" finished-at="2020-09-30T09:51:42 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cartadditem status=SUCCESS method=TC_04_AddCart.cartadditem()[pri:1, instance:TC_04_AddCart@470734c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_04_AddCart -->
      <class name="TC_08_WishList">
        <test-method signature="Addtowishlist()[pri:0, instance:TC_08_WishList@173ed316]" started-at="2020-09-30T09:53:33 GMT" name="Addtowishlist" finished-at="2020-09-30T09:54:07 GMT" duration-ms="33969" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='container']/div/div[1]/div[1]/div[2]/div[3]/div/div/div/div"}
  (Session info: chrome=85.0.4183.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-IDHAMJ1', ip: '192.168.43.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\LENOVO\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:52089}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 659e49b4f40321cd27c1d411c056563c
*** Element info: {Using=xpath, value=//*[@id='container']/div/div[1]/div[1]/div[2]/div[3]/div/div/div/div}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='container']/div/div[1]/div[1]/div[2]/div[3]/div/div/div/div"}
  (Session info: chrome=85.0.4183.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-IDHAMJ1', ip: '192.168.43.175', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\LENOVO\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:52089}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 659e49b4f40321cd27c1d411c056563c
*** Element info: {Using=xpath, value=//*[@id='container']/div/div[1]/div[1]/div[2]/div[3]/div/div/div/div}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at TC_08_WishList.Addtowishlist(TC_08_WishList.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Addtowishlist -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_08_WishList@173ed316]" started-at="2020-09-30T09:54:07 GMT" name="getResult" finished-at="2020-09-30T09:54:07 GMT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Addtowishlist status=FAILURE method=TC_08_WishList.Addtowishlist()[pri:0, instance:TC_08_WishList@173ed316] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_08_WishList -->
      <class name="TC_03_Searchitem">
        <test-method signature="searchAndSelectProduct()[pri:0, instance:TC_03_Searchitem@8f2ef19]" started-at="2020-09-30T09:50:40 GMT" name="searchAndSelectProduct" finished-at="2020-09-30T09:51:01 GMT" duration-ms="20478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAndSelectProduct -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_03_Searchitem@8f2ef19]" started-at="2020-09-30T09:51:01 GMT" name="getResult" finished-at="2020-09-30T09:51:01 GMT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchAndSelectProduct status=SUCCESS method=TC_03_Searchitem.searchAndSelectProduct()[pri:0, instance:TC_03_Searchitem@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_03_Searchitem -->
      <class name="TC_05_RemoveCart">
        <test-method signature="RemoveFromCart()[pri:0, instance:TC_05_RemoveCart@2cf3d63b]" started-at="2020-09-30T09:51:42 GMT" name="RemoveFromCart" finished-at="2020-09-30T09:52:22 GMT" duration-ms="39991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveFromCart -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_05_RemoveCart@2cf3d63b]" started-at="2020-09-30T09:52:22 GMT" name="getResult" finished-at="2020-09-30T09:52:22 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RemoveFromCart status=SUCCESS method=TC_05_RemoveCart.RemoveFromCart()[pri:0, instance:TC_05_RemoveCart@2cf3d63b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_05_RemoveCart -->
      <class name="TC_07_Invalidpincode">
        <test-method signature="invalidpincode()[pri:0, instance:TC_07_Invalidpincode@69e153c5]" started-at="2020-09-30T09:52:48 GMT" name="invalidpincode" finished-at="2020-09-30T09:53:33 GMT" duration-ms="45003" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidpincode -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_07_Invalidpincode@69e153c5]" started-at="2020-09-30T09:53:33 GMT" name="getResult" finished-at="2020-09-30T09:53:33 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidpincode status=SUCCESS method=TC_07_Invalidpincode.invalidpincode()[pri:0, instance:TC_07_Invalidpincode@69e153c5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_07_Invalidpincode -->
      <class name="TC_06_HighTolow">
        <test-method signature="mobilenameverify()[pri:0, instance:TC_06_HighTolow@7674f035]" started-at="2020-09-30T09:52:22 GMT" name="mobilenameverify" finished-at="2020-09-30T09:52:48 GMT" duration-ms="25322" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Apple iPhone 11 Pro (Space Grey, 512 GB)] but found [Motorola Razr (Black, 128 GB)]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Apple iPhone 11 Pro (Space Grey, 512 GB)] but found [Motorola Razr (Black, 128 GB)]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TC_06_HighTolow.mobilenameverify(TC_06_HighTolow.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobilenameverify -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_06_HighTolow@7674f035]" started-at="2020-09-30T09:52:48 GMT" name="getResult" finished-at="2020-09-30T09:52:48 GMT" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mobilenameverify status=FAILURE method=TC_06_HighTolow.mobilenameverify()[pri:0, instance:TC_06_HighTolow@7674f035] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- TC_06_HighTolow -->
      <class name="TC_01_validLogin">
        <test-method is-config="true" signature="setup()[pri:0, instance:TC_01_validLogin@4b741d6d]" started-at="2020-09-30T09:49:23 GMT" name="setup" finished-at="2020-09-30T09:49:23 GMT" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyhellosign()[pri:0, instance:TC_01_validLogin@4b741d6d]" started-at="2020-09-30T09:49:23 GMT" name="verifyhellosign" finished-at="2020-09-30T09:49:37 GMT" duration-ms="14019" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Hello Sign]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Online Shopping Site for Mobiles, Electronics, Furniture, Grocery, Lifestyle, Books & More. Best Offers!] but found [Hello Sign]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TC_01_validLogin.verifyhellosign(TC_01_validLogin.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Flipkart is open]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyhellosign -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_01_validLogin@4b741d6d]" started-at="2020-09-30T09:49:37 GMT" name="getResult" finished-at="2020-09-30T09:49:37 GMT" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyhellosign status=FAILURE method=TC_01_validLogin.verifyhellosign()[pri:0, instance:TC_01_validLogin@4b741d6d] output=Flipkart is open]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="LoginTest()[pri:1, instance:TC_01_validLogin@4b741d6d]" started-at="2020-09-30T09:49:37 GMT" name="LoginTest" finished-at="2020-09-30T09:50:12 GMT" duration-ms="35117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:TC_01_validLogin@4b741d6d]" started-at="2020-09-30T09:50:12 GMT" name="getResult" finished-at="2020-09-30T09:50:12 GMT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=TC_01_validLogin.LoginTest()[pri:1, instance:TC_01_validLogin@4b741d6d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:TC_01_validLogin@4b741d6d]" started-at="2020-09-30T09:56:11 GMT" name="tearDown" finished-at="2020-09-30T09:56:12 GMT" duration-ms="1629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TC_01_validLogin -->
    </test> <!-- TestDemo -->
  </suite> <!-- Extended report -->
</testng-results>
